{
  "openapi": "3.0.1",
  "info": {
    "version": "2.1.1",
    "title": "HealthHub API",
    "description": "Ð¢ÑƒÑ‚ Ð¼Ð¾Ð¶Ðµ Ð±ÑƒÑ‚Ð¸ Ð’Ð°ÑˆÐ° Ñ€ÐµÐºÐ»Ð°Ð¼Ð° ðŸ™‚"
  },
  "servers": [
    {
      "url": "https://backend-healthyhub.onrender.com/"
    },
    {
      "url": "http://localhost:3000"
    }
  ],
  "tags": [
    {
      "name": "Auth",
      "description": "Authorization endpoints"
    },
    {
      "name": "Users",
      "description": "User endpoints"
    },
    {
      "name": "Recommended Food",
      "description": "Recommended food endpoints"
    }
  ],
  "paths": {
    "/api/users/register": {
      "post": {
        "tags": ["Auth"],
        "summary": "User registration",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "User's name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "email",
            "in": "path",
            "description": "User's email",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "password",
            "in": "path",
            "description": "User's password",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Registration's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)"
          },
          "409": {
            "description": "Provided email already exists"
          }
        }
      }
    },
    "/api/users/check-email": {
      "post": {
        "tags": ["Auth"],
        "summary": "Check the presence of an email in the database",
        "parameters": [
          {
            "name": "email",
            "in": "path",
            "description": "User's email",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Request to check an email",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmailCheckRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Result of email verification",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmailCheckResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server error during email verification",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },

    "/api/users/login": {
      "post": {
        "tags": ["Auth"],
        "summary": "User signin",
        "parameters": [
          {
            "name": "email",
            "in": "path",
            "description": "User's email",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "password",
            "in": "path",
            "description": "User's password",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Signin's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SigninRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful signin",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SigninResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)"
          },
          "401": {
            "description": "Unauthorized (invalid credentials)"
          }
        }
      }
    },
    "/api/users/logout": {
      "post": {
        "tags": ["Auth"],
        "summary": "User logout",
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "description": "User's id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "204": {
            "description": "Successful logout"
          },
          "401": {
            "description": "Unauthorized (invalid credentials)"
          }
        }
      }
    },
    "/verify/{token}": {
      "get": {
        "tags": ["Auth"],
        "summary": "Verify email with token",
        "parameters": [
          {
            "name": "token",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Email verification successful"
          },
          "400": {
            "description": "Bad request (invalid token)"
          },
          "401": {
            "description": "Unauthorized (invalid token)"
          }
        }
      }
    },
    "/verify": {
      "post": {
        "tags": ["Auth"],
        "summary": "Resend verification email",
        "requestBody": {
          "description": "Email object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmailRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Verification email resent successfully"
          },
          "400": {
            "description": "Bad request (invalid request body)"
          },
          "401": {
            "description": "Unauthorized (invalid token)"
          }
        }
      }
    },
    "/api/users/forgot-password": {
      "post": {
        "tags": ["Auth"],
        "summary": "Forgot password",
        "parameters": [
          {
            "name": "email",
            "in": "path",
            "description": "User's email",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Email object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmailRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Password reset email sent successfully"
          },
          "400": {
            "description": "Bad request (invalid request body)"
          },
          "401": {
            "description": "Unauthorized (invalid token)"
          }
        }
      }
    },

    "/api/users/current": {
      "get": {
        "tags": ["Users"],
        "summary": "Get current user",
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "description": "User's id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer token for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CurrentUserResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (invalid credentials)"
          }
        }
      }
    },
    "/api/users/update": {
      "patch": {
        "tags": ["Users"],
        "summary": "Update user's information",
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "description": "User's id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer token for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "description": "Updated user's information",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserInfoRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User's information updated successfully"
          },
          "400": {
            "description": "Bad request (invalid request body or ID)"
          },
          "401": {
            "description": "Unauthorized (invalid token)"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/api/users/avatar": {
      "patch": {
        "tags": ["Users"],
        "summary": "Upload user avatar",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer token for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Avatar image file",
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "avatar": {
                    "type": "string",
                    "format": "binary",
                    "description": "Avatar image file"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Avatar uploaded successfully"
          },
          "400": {
            "description": "Bad request (invalid request body)"
          },
          "401": {
            "description": "Unauthorized (invalid token)"
          },
          "422": {
            "description": "Unprocessable entity (image upload failed)"
          }
        }
      }
    },

    "/api/recommended-food": {
      "get": {
        "tags": ["Recommended Food"],
        "summary": "Get food recommendations",
        "description": "Retrieve a list of recommended food items.",
        "responses": {
          "200": {
            "description": "Successful request. Returns a list of recommended food items.",
            "content": {
              "application/json": {
                "example": {
                  "name": "Apples",
                  "amount": "100 g",
                  "img": "https://res.cloudinary.com/dec1shvoo/image/upload/v1692479041/Your%20health/pngfind.com-apple-png-1037796_udjai9.png",
                  "calories": 52,
                  "nutrition": {
                    "carbohydrates": 14,
                    "protein": 0.3,
                    "fat": 0.2
                  }
                },
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Food"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error. Unable to retrieve food recommendations."
          }
        }
      }
    },

    "/api/user/food-intake": {
      "post": {
        "tags": ["Users"],
        "summary": "Add food intake for a user",
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "description": "User's id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Food intake object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FoodIntakeRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Food intake added successfully"
          },
          "400": {
            "description": "Bad request (invalid request body)"
          },
          "401": {
            "description": "Unauthorized (invalid token)"
          }
        }
      }
    },
    "/api/user/food-intake/{id}": {
      "put": {
        "tags": ["Users"],
        "summary": "Update food intake by ID",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ID of the food intake record",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Updated food intake information",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FoodIntakeRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Food intake updated successfully"
          },
          "400": {
            "description": "Bad request (invalid request body or ID)"
          },
          "401": {
            "description": "Unauthorized (invalid token)"
          },
          "404": {
            "description": "Food intake record not found"
          }
        }
      }
    }
  },

  "components": {
    "schemas": {
      "Food": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the food product"
          },
          "amount": {
            "type": "string",
            "description": "Amount of the food product"
          },
          "img": {
            "type": "string",
            "description": "Image of the food product"
          },
          "calories": {
            "type": "number",
            "description": "Amount of calories in the food product"
          },
          "nutrition": {
            "type": "object",
            "properties": {
              "carbohydrates": {
                "type": "number",
                "description": "Amount of carbohydrates in the food product"
              },
              "protein": {
                "type": "number",
                "description": "Amount of protein in the food product"
              },
              "fat": {
                "type": "number",
                "description": "Amount of fat in the food product"
              }
            }
          }
        }
      },
      "EmailRequest": {
        "type": "object",
        "required": ["email"],
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          }
        }
      },
      "Error": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "description": "Status code"
          },
          "status": {
            "type": "string",
            "description": "Status message"
          }
        }
      },
      "EmailCheckRequest": {
        "type": "object",
        "required": ["email"],
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          }
        },
        "description": "Send a new password to the user's email if it exists in the database."
      },
      "EmailCheckResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "A message indicating whether the email exists in the database or not."
          }
        },
        "description": "Response indicating if the email exists in the database."
      },
      "UpdateUserInfoRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the user."
          },
          "goal": {
            "type": "string",
            "description": "The user's goal."
          },
          "gender": {
            "type": "string",
            "description": "The user's gender."
          },
          "age": {
            "type": "integer",
            "description": "The user's age."
          },
          "height": {
            "type": "number",
            "description": "The user's height in centimeters."
          },
          "weight": {
            "type": "number",
            "description": "The user's weight in kilograms."
          },
          "activity": {
            "type": "string",
            "description": "The user's activity level."
          }
        },
        "description": "Data for updating information about a user."
      },

      "UpdateUserInfoResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "The status of the response (e.g., 'success')."
          },
          "data": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "The user's updated name."
              },
              "goal": {
                "type": "string",
                "description": "The user's updated goal."
              },
              "gender": {
                "type": "string",
                "description": "The user's updated gender."
              },
              "age": {
                "type": "integer",
                "description": "The user's updated age."
              },
              "height": {
                "type": "number",
                "description": "The user's updated height in centimeters."
              },
              "weight": {
                "type": "number",
                "description": "The user's updated weight in kilograms."
              },
              "activity": {
                "type": "string",
                "description": "The user's updated activity level."
              }
            }
          }
        }
      },
      "CurrentUserResponse": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "description": "Status code"
          },
          "status": {
            "type": "string",
            "description": "Status message"
          },
          "user": {
            "type": "object",
            "properties": {
              "email": {
                "type": "string",
                "description": "User's email"
              },
              "name": {
                "type": "string",
                "description": "User's name"
              },
              "goal": {
                "type": "string",
                "description": "User's goal"
              },
              "age": {
                "type": "integer",
                "description": "User's age"
              },
              "height": {
                "type": "number",
                "description": "User's height"
              },
              "weight": {
                "type": "number",
                "description": "User's weight"
              },
              "avatarUrl": {
                "type": "string",
                "description": "URL to user's avatar"
              },
              "gender": {
                "type": "string",
                "description": "User's gender"
              },
              "activity": {
                "type": "string",
                "description": "User's activity level"
              }
            }
          }
        },
        "FoodIntakeUpdateRequest": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name of the food product"
            },
            "carbohydrates": {
              "type": "number",
              "description": "Amount of carbohydrates"
            },
            "protein": {
              "type": "number",
              "description": "Amount of protein"
            },
            "fat": {
              "type": "number",
              "description": "Amount of fat"
            }
          },
          "description": "Data for updating information about food intake."
        },
        "FoodIntakeRequest": {
          "type": "object",
          "properties": {
            "breakfast": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "carbohydrates": {
                    "type": "number"
                  },
                  "protein": {
                    "type": "number"
                  },
                  "fat": {
                    "type": "number"
                  },
                  "calories": {
                    "type": "number"
                  }
                }
              }
            },
            "lunch": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "carbohydrates": {
                    "type": "number"
                  },
                  "protein": {
                    "type": "number"
                  },
                  "fat": {
                    "type": "number"
                  },
                  "calories": {
                    "type": "number"
                  }
                }
              }
            },
            "snack": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "carbohydrates": {
                    "type": "number"
                  },
                  "protein": {
                    "type": "number"
                  },
                  "fat": {
                    "type": "number"
                  },
                  "calories": {
                    "type": "number"
                  }
                }
              }
            },
            "dinner": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "carbohydrates": {
                    "type": "number"
                  },
                  "protein": {
                    "type": "number"
                  },
                  "fat": {
                    "type": "number"
                  },
                  "calories": {
                    "type": "number"
                  }
                }
              }
            }
          },
          "description": "Request to add food intake information for a user."
        },
        "FoodIntakeResponse": {
          "type": "object",
          "properties": {
            "code": {
              "type": "integer",
              "description": "Status code"
            },
            "status": {
              "type": "string",
              "description": "Status message"
            }
          },
          "description": "Response after successfully adding food intake information for a user."
        },

        "RegistrationRequest": {
          "type": "object",
          "required": [
            "name",
            "email",
            "password",
            "goal",
            "age",
            "gender",
            "weight",
            "height",
            "activity"
          ],
          "properties": {
            "name": {
              "type": "string",
              "description": "User's name",
              "example": "John Doe"
            },
            "email": {
              "type": "string",
              "description": "User's email",
              "format": "email"
            },
            "password": {
              "type": "string",
              "description": "User's password",
              "example": "qwerty123"
            },
            "goal": {
              "type": "string",
              "description": "User's goal",
              "example": "Lose Fat",
              "enum": ["Lose Fat", "Gain Muscle", "Maintain Weight"]
            },
            "age": {
              "type": "integer",
              "description": "User's age"
            },
            "gender": {
              "type": "string",
              "description": "User's gender",
              "enum": ["Male", "Female", "Other"]
            },
            "weight": {
              "type": "number",
              "description": "User's weight"
            },
            "height": {
              "type": "number",
              "description": "User's height"
            },
            "activity": {
              "type": "number",
              "description": "User's activity level"
            }
          }
        },
        "RegistrationResponse": {
          "type": "object",
          "properties": {
            "code": {
              "type": "integer",
              "description": "Status code"
            },
            "status": {
              "type": "string",
              "description": "Status message"
            },
            "user": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "description": "User's email"
                },
                "name": {
                  "type": "string",
                  "description": "User's name"
                },
                "goal": {
                  "type": "string",
                  "description": "User's goal"
                },
                "age": {
                  "type": "integer",
                  "description": "User's age"
                },
                "height": {
                  "type": "number",
                  "description": "User's height"
                },
                "weight": {
                  "type": "number",
                  "description": "User's weight"
                },
                "avatarUrl": {
                  "type": "string",
                  "description": "URL to user's avatar"
                },
                "gender": {
                  "type": "string",
                  "description": "User's gender"
                },
                "activity": {
                  "type": "string",
                  "description": "User's activity level"
                }
              }
            },
            "token": {
              "type": "string",
              "description": "Access token"
            }
          }
        },
        "SigninRequest": {
          "type": "object",
          "required": ["email", "password"],
          "properties": {
            "email": {
              "type": "string",
              "description": "User's email",
              "format": "email"
            },
            "password": {
              "type": "string",
              "description": "User's password",
              "example": "qwerty123"
            }
          }
        },
        "SigninResponse": {
          "type": "object",
          "properties": {
            "code": {
              "type": "integer",
              "description": "Status code"
            },
            "status": {
              "type": "string",
              "description": "Status message"
            },
            "user": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "description": "User's email"
                },
                "name": {
                  "type": "string",
                  "description": "User's name"
                },
                "goal": {
                  "type": "string",
                  "description": "User's goal"
                },
                "age": {
                  "type": "integer",
                  "description": "User's age"
                },
                "height": {
                  "type": "number",
                  "description": "User's height"
                },
                "weight": {
                  "type": "number",
                  "description": "User's weight"
                },
                "avatarUrl": {
                  "type": "string",
                  "description": "URL to user's avatar"
                },
                "gender": {
                  "type": "string",
                  "description": "User's gender"
                },
                "activity": {
                  "type": "string",
                  "description": "User's activity level"
                }
              }
            },
            "token": {
              "type": "string",
              "description": "Access token"
            }
          }
        }
      },

      "ForgotPasswordResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "A message indicating whether the password reset email was sent successfully or not."
          }
        },
        "description": "Response indicating if the password reset email was sent."
      },
      "LogoutRequest": {
        "type": "object",
        "required": ["userId"],
        "properties": {
          "userId": {
            "type": "string",
            "description": "User's id"
          }
        }
      },
      "LogoutResponse": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "description": "Status code"
          },
          "status": {
            "type": "string",
            "description": "Status message"
          }
        }
      }
    }
  }
}
